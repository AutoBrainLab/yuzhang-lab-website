name: Deploy Hugo site to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.152.2
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      
      - name: Install Node.js dependencies
        run: |
          if [ -f website-new/package.json ]; then
            cd website-new
            npm ci
          fi
      
      - name: Install Hugo modules
        run: |
          cd website-new
          hugo mod get
      
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          cd website-new
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      
      - name: Fix resource paths and root index
        run: |
          cd website-new/public
          # Copy CSS, JS, and media from /en/ to root for shared resources
          if [ -d en/css ]; then cp -r en/css .; fi
          if [ -d en/js ]; then cp -r en/js .; fi
          if [ -d en/media ]; then cp -r en/media .; fi
          if [ -d en/webfonts ]; then cp -r en/webfonts .; fi
          if [ -d en/images ]; then cp -r en/images .; fi
          echo "Resource directories copied to root"
          # Copy root index.html from static folder (Hugo doesn't copy it when defaultContentLanguageInSubdir is true)
          if [ -f ../static/index.html ]; then
            cp ../static/index.html .
            echo "Root index.html copied"
          fi
      
      - name: Debug - List generated files
        run: |
          cd website-new
          echo "=== Root CSS files ==="
          find public -maxdepth 2 -name "*.css" | head -10 || echo "No CSS files found"
          echo "=== Root JS files ==="
          find public -maxdepth 2 -name "*.js" | head -10 || echo "No JS files found"
          echo "=== Root media files ==="
          ls -la public/media/ 2>/dev/null | head -10 || echo "No media directory"
          echo "=== Directory structure ==="
          ls -la public/ | head -20
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./website-new/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
